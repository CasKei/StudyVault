.include "nominal.jsim"
.include "stdcell.jsim"
.include "lab3_mult.jsim"
* .include "lab3_testadder.jsim"
* .include "lab3_testcompare.jsim"
* .include "lab3_testboolean.jsim"
* .include "lab3_testshifter.jsim"
* .include "lab3_testmultiply.jsim"
.include "lab3checkoff.jsim"


**********************************
**** FA circuit ******************
.subckt FA a b cin s co
Xs1 a b s1 xor2
Xs2 s1 cin s xor2
Xc1 a b co1 nand2
Xc2 a cin co2 nand2
Xc3 b cin co3 nand2
Xc4 co1 co2 co3 co nand3
.ends
**********************************



**** Adder32 circuit *************
.subckt adder32 ALUFN[0] a[31:0] b[31:0] s[31:0] z v n
* XOR unit for input b
Xxor_b b[31:0] alufn0#32 xb[31:0] xor2
* FA a b cin s co
Xbit0 a0 xb0 alufn0 s0 c0 FA
Xbit_therest a[31:1] xb[31:1] c[30:0] s[31:1] c[31:1] FA

* Z unit
Xlayer_1 s[31:16] s[15:0] layer_1[15:0] or2
Xlayer_2 layer_1[15:8] layer_1[7:0] layer_2[7:0] or2
Xlayer_3 layer_2[7:4] layer_2[3:0] layer_3[3:0] or2
Xlayer_4 layer_3[3:2] layer_3[1:0] layer_4[1:0] or2
Xz_inv layer_40 layer_41 z_inv or2
Xz_unit z_inv z inverter

* V unit
* V = XA31 . XB31 . \not{S31} + \not{XA31} . \not{XB31} . S31
*   = neg    neg     pos      +      pos         pos      neg
Xnots31 s31 nots31 inverter
Xnotxb31 xb31 notxb31 inverter
Xnota31 a31 nota31 inverter
Xnegnegpos a31 xb31 nots31 negnegpos and3
Xposposneg nota31 notxb31 s31 posposneg and3
Xv_unit posposneg negnegpos v or2

* N unit
Xn_unit s31 n buffer
.ends
*********************************





**********************************
**** Compare32 circuit ***********
.subckt compare32 ALUFN[2:1] z v n cmp[31:0]
Xzeroes cmp[31:1] constant0
Xlt n v out_lt xor2
Xleq z out_lt out_leq or2
Xmux ALUFN[1] ALUFN[2] 0 z out_lt out_leq cmp[0] mux4
.ends
**********************************






**********************************
**** Boolean32 circuit ***********
.subckt boole32 ALUFN[3:0] A[31:0] B[31:0] boole[31:0]
* note jsim doc for selector specifications
* use mux4 in stdcell: 6 input(2 inp 4 sel), 1 output
Xmux_bool a[31:0] b[31:0] ALUFN0#32 ALUFN1#32 ALUFN2#32 ALUFN3#32 boole[31:0] mux4
.ends
**********************************





**********************************
**** Shifter32 circuit ***********
* Xid s d0 d1 z mux2
*Z = D0 when S = 0
*Z = D1 when S = 1
.subckt shift32 ALUFN[1:0] A[31:0] B[4:0] shift[31:0]
* Left
XSL4a B4#16 A[31:16] A[15:0]  WL[31:16] mux2
XSL4b B4#16 A[15:0]  GND#16   WL[15:0]  mux2
XSL3a B3#8  WL[7:0]  GND#8    XL[7:0]   mux2
XSL3b B3#24 WL[31:8] WL[23:0] XL[31:8]  mux2
XSL2a B2#4  XL[3:0]  GND#4    YL[3:0]   mux2
XSL2b B2#28 XL[31:4] XL[27:0] YL[31:4]  mux2
XSL1a B1#2  YL[1:0]  GND#2    ZL[1:0]   mux2
XSL1b B1#30 YL[31:2] YL[29:0] ZL[31:2]  mux2
XSL0a B0    ZL[0]    GND      SHL[0]    mux2
XSL0b B0#31 ZL[31:1] ZL[30:0] SHL[31:1] mux2

* Right
XSR4a B4#16 A[15:0]   A[31:16] WR[15:0]  mux2
XSR4b B4#16 A[31:16]  GND#16   WR[31:16] mux2
XSR3a B3#8  WR[31:24] GND#8    XR[31:24] mux2
XSR3b B3#24 WR[23:0]  WR[31:8] XR[23:0]  mux2
XSR2a B2#4  XR[31:28] GND#4    YR[31:28] mux2
XSR2b B2#28 XR[27:0]  XR[31:4] YR[27:0]  mux2
XSR1a B1#2  YR[31:30] GND#2    ZR[31:30] mux2
XSR1b B1#30 YR[29:0]  YR[31:2] ZR[29:0]  mux2
XSR0a B0    ZR[31]    GND      SHR[31]   mux2
XSR0b B0#31 ZR[30:0] ZR[31:1]  SHR[30:0] mux2

* Right arith
XSRA4b B4#16 A[15:0]    A[31:16]  WRA[15:0]  mux2
XSRA3a B4#16 A[31:16]   A[31]#16  WRA[31:16] mux2
XSRA4a B3#8  WRA[31:24] A[31]#8   XRA[31:24] mux2
XSRA3b B3#24 WRA[23:0]  WRA[31:8] XRA[23:0]  mux2
XSRA2a B2#4  XRA[31:28] A[31]#4   YRA[31:28] mux2
XSRA2b B2#28 XRA[27:0]  XRA[31:4] YRA[27:0]  mux2
XSRA1a B1#2  YRA[31:30] A[31]#2   ZRA[31:30] mux2
XSRA1b B1#30 YRA[29:0]  YRA[31:2] ZRA[29:0]  mux2
XSRA0a B0    ZRA[31]    A[31]     SRA[31]    mux2
XSRA0b B0#31 ZRA[30:0]  ZRA[31:1] SRA[30:0]  mux2

* ALL
XALL ALUFN1#32 ALUFN0#32 SHL[31:0] mux4d1#32 SHR[31:0] SRA[31:0] shift[31:0] mux4

.connect b[31:5] 0
.connect GND 0
.connect mux4d1 0

.ends
**********************************






**********************************
**** ALU32 circuit ***************
.subckt alu ALUFN[5:0] A[31:0] B[31:0] alu[31:0] z v n
Xmult  A[31:0]  B[31:0] mult[31:0]            mult32
Xadder ALUFN[0] A[31:0] B[31:0] s[31:0] z v n adder32
Xcmp   ALUFN[2:1] z v n cmp[31:0]             compare32
Xbool  ALUFN[3:0] A[31:0] B[31:0] bool[31:0]  boole32
XSH    ALUFN[1:0] A[31:0] B[4:0] shift[31:0] shift32

XALU1 ALUFN[1]#32 S[31:0] mult[31:0] alumux2_out[31:0] mux2
XALUa ALUFN[5]#31 ALUFN[4]#31 alumux2_out[31:1] shift[31:1] bool[31:1] GND#31 ALU[31:1] mux4
XALUb ALUFN[5] ALUFN[4] alumux2_out[0] shift[0] bool[0] cmp[0] ALU[0] mux4

.connect GND 0

.ends
**********************************